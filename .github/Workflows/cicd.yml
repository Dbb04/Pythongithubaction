name: CI Pipeline with Pytest and Docker Hub Deployment

# Trigger the workflow on every push to the main branch
on:
  push:
    branches: [ main ]

jobs:
  # Job 1: Run the tests
  test:
    name: Run Pytest Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python 3.9
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: pip install -r requirements.txt
      
      - name: Run tests with pytest
        run: pytest

  # Job 2: Build and push the Docker image
  build-and-push:
    name: Build and Push to Docker Hub
    runs-on: ubuntu-latest
    needs: test # This job will only run if the 'test' job succeeds
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKOERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/my-flask-app:latest 

  deploy:
    name: Deploy to EC2 Instance
    runs-on: ubuntu-latest
    needs: build-and-push 

    steps:
      - name: Connect to EC2 and Deploy
       
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
          
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/my-flask-app:latest 

           
            docker stop my-flask-container || true
            docker rm my-flask-container || true

            
            docker run -d -p 80:5000 --name my-flask-container ${{ secrets.DOCKERHUB_USERNAME }}/my-flask-app:latest 
